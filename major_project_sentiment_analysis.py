# -*- coding: utf-8 -*-
"""Major Project Sentiment Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IRRw55Q40RlnurU9xz6aDz5W-ZLkeJiI
"""

!pip install nltk

from sklearn.datasets import load_files
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import pickle
import re
import nltk
from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import confusion_matrix,accuracy_score,classification_report

df = pd.read_table('/content/drive/My Drive/smartknower/Machine learning/Sentiment Analysis project/Restaurant_Reviews.tsv')
df

df.info()

df['Review'].value_counts()

df['Review'][5]

df.head()

nltk.download('stopwords')
corpus = []
for i in range(0, 1000):
    comment = re.sub(pattern='[^a-zA-Z]',repl= ' ',string = df['Review'][i])
    comment = comment.lower()
    comment_words = comment.split()
    ps = PorterStemmer()
    comment = [ps.stem(word) for word in comment_words if not word in set(stopwords.words('english'))]
    comment = [ps.stem(word) for word in comment_words]
    comment = ' '.join(comment)
    corpus.append(comment)

tfidf = TfidfVectorizer(max_features=1500)
x = tfidf.fit_transform(corpus).toarray()
y = df.iloc[:, 1].values

pickle.dump(tfidf, open('tfidf-transform.pkl', 'wb'))

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.20,random_state= 0)

text_model = MultinomialNB(alpha=0.2)
text_model.fit(x_train,y_train)

filename = 'restaurant-sentiment-mnb-model.pkl'
pickle.dump(text_model, open(filename, 'wb'))

y_pred = text_model.predict(x_test)

y_test

accuracy_score(y_test,y_pred)

confusion_matrix(y_test,y_pred)

pd.crosstab(y_test,y_pred, rownames=['Actual'], colnames=['Predicted'], margins=True)

print(classification_report(y_test,y_pred))

